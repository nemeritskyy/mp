<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.13</version>
        <relativePath/>
    </parent>
    <groupId>ua.com.obox</groupId>
    <artifactId>obox</artifactId>
    <version>${obox.version}-${obox.deployment.type}</version>
    <packaging>jar</packaging>
    <name>obox</name>
    <description>obox</description>
    <properties>
        <obox.version>0.1.17</obox.version>
        <obox.deployment.type>DEV</obox.deployment.type>
        <java.version>19</java.version>
        <dotenv.version>4.0.0</dotenv.version>
        <jwt.version>0.11.5</jwt.version>
        <swagger.version>1.6.15</swagger.version>
        <lombok.version>1.18.30</lombok.version>
        <junit.version>5.9.3</junit.version>
        <commons.net.version>3.10.0</commons.net.version>
        <imgscalr.version>4.2</imgscalr.version>
        <bucket4j.version>8.7.0</bucket4j.version>
        <telegram.version>6.9.7.0</telegram.version>
        <maven.compiler.version>3.11.0</maven.compiler.version>
        <heroku.maven.version>3.0.7</heroku.maven.version>
        <mockito.version>5.8.0</mockito.version>
        <mysql.connector.version>8.2.0</mysql.connector.version>
        <docker.client.version>1.4.13</docker.client.version>
    </properties>
    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <activatedProperties>local</activatedProperties>
                <heroku.appName/>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <activatedProperties>prod</activatedProperties>
                <heroku.appName>oboxapp-prod</heroku.appName>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <activatedProperties>dev</activatedProperties>
                <heroku.appName>oboxapp-dev</heroku.appName>
            </properties>
        </profile>
    </profiles>
    <dependencies>
        <!-- hide credentials -->
        <dependency>
            <groupId>me.paulschwarz</groupId>
            <artifactId>spring-dotenv</artifactId>
            <version>${dotenv.version}</version>
        </dependency>

        <!-- spring starters -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- database -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>

        <!-- JWT libraries -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>${jwt.version}</version>
        </dependency>

        <!-- swagger -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- ftp -->
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>${commons.net.version}</version>
        </dependency>

        <!-- crop images -->
        <dependency>
            <groupId>org.imgscalr</groupId>
            <artifactId>imgscalr-lib</artifactId>
            <version>${imgscalr.version}</version>
        </dependency>

        <!-- limits for endpoints -->
        <dependency>
            <groupId>com.bucket4j</groupId>
            <artifactId>bucket4j-core</artifactId>
            <version>${bucket4j.version}</version>
        </dependency>

        <!-- telegram bot -->
        <dependency>
            <groupId>org.telegram</groupId>
            <artifactId>telegrambots</artifactId>
            <version>${telegram.version}</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>config/*</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources/config/${activatedProperties}</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <id>delete-test-directory</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>src/test/java</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${project.parent.version}</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.heroku.sdk</groupId>
                <artifactId>heroku-maven-plugin</artifactId>
                <version>${heroku.maven.version}</version>
                <configuration>
                    <appName>${heroku.appName}</appName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-maven-plugin</artifactId>
                <version>0.0.6</version>
                <extensions>true</extensions>
                <configuration>
                    <!-- for showing output of sentry-cli -->
                    <debugSentryCli>true</debugSentryCli>
                    <org>obox</org>
                    <project>java-spring-boot</project>
                    <!-- in case you're self hosting, provide the URL here -->
                    <!--<url>http://localhost:8000/</url>-->
                    <authToken>${env.SENTRY_AUTH_TOKEN}</authToken>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>uploadSourceBundle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${docker.client.version}</version>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>nemeritskyy/obox-dev</repository>
                    <tag>${obox.version}-${obox.deployment.type}</tag>
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    <dockerfile>${project.basedir}/Dockerfile</dockerfile>
                    <skip>false</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>